#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ../../../.lyx/layouts/mmuthesis
\begin_preamble
%in manjaro you may need texlive-bibtexextra and texlive-latexextra and texlive-langcyrillic
\usepackage{ifthen}
\usepackage{verbatim}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{url} 

\usepackage{epsfig} 
\usepackage{tabls}
\usepackage{amssymb}
\usepackage{amsmath}
\interdisplaylinepenalty=2500
\usepackage[usenames]{color}

\usepackage{multicol}
\usepackage{colortbl}
\usepackage{pdfcolmk}
\usepackage{natbib}

\usepackage{color}
\usepackage{times}
\usepackage{amsfonts}
\usepackage{longtable}

\definecolor{MyBlack}{rgb}{0,0,0}
\definecolor{MyGray}{rgb}{0.5,0.5,0.5} 
\definecolor{MyBlue}{rgb}{0,0.4,1}
\definecolor{MyLightBlue}{rgb}{0,0.8,0.7}

\providecommand{\pt}{\cellcolor{MyBlack}}
\providecommand{\st}{\cellcolor{MyGray}}

\providecommand{\bt}{\cellcolor{MyBlue}}
\providecommand{\lt}{\cellcolor{MyLightBlue}}

\usepackage{array}

\usepackage{xeCJK}
\setmainfont{Noto Serif}
\setCJKmainfont{Source Han Sans JP}

\usepackage{hyperref}

%% *** Do not adjust lengths that control margins, column widths, etc. ***
%% *** Do not use packages that alter fonts (such as pslatex).         ***
%% There should be no need to do such things with IEEEtran.cls V1.6 and later.
%%page layout
%%\usepackage{layout}
%%
%%resetting
%%\setlength{\hoffset}{-1in}
%%\setlength{\voffset}{-1in}
%%
%%gap between columns
%%\setlength{\columnsep}{10mm}
%%gap above header
%%\setlength{\topmargin}{1in}
%%between header and text
%%\setlength{\topskip}{0cm}
%%height of main text
%%\setlength{\textheight}{8in}
%% width of text
%%\setlength{\textwidth}{5.5in}
%%odd page left margin
%%\setlength{\oddsidemargin}{1.5in}
%%even page left margin
%%\setlength{\evensidemargin}{4cm}
%%\setlength{\headheight}{0mm}
%%\setlength{\marginparsep}{0mm}
%%\setlength{\marginparwidth}{0mm}
%%\setlength{\headsep}{0mm}
%%bottom margin
%%\setlength{\footskip}{0cm}

\addtocounter{MaxMatrixCols}{20}
\pagenumbering{roman}
\end_preamble
\options 12pt,MComp
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package auto
\inputencoding utf8-cjk
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\font_cjk goth
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style agsm
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style british
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Applying caching to a source based package manager
\end_layout

\begin_layout Author
By
\begin_inset Newline newline
\end_inset

Seirra Blake
\end_layout

\begin_layout Standard
\align center
A REPORT SUBMITTED TO MANCHESTER METROPOLITAN UNIVERSITY
\begin_inset Newline newline
\end_inset

FOR THE DEGREE OF BACHELOR OF SCIENCE
\begin_inset Newline newline
\end_inset

IN THE FACULTY OF SCIENCE AND ENGINEERING
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename mmu_logo.pdf
	width 40col%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center
Department of Computing and Mathematics
\end_layout

\begin_layout Standard
\align center
Principal adviser [supervisor]
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Chapter*
Declaration
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "4in"
height_special "none"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
No part of this project has been submitted in support of an application
 for any other degree or qualification at this or any other institute of
 learning.
 Apart from those parts of the project containing citations to the work
 of others, this project is my own unaided work.
 This work has been carried out in accordance with the Manchester Metropolitan
 University research ethics procedures, and has received ethical approval
 number [ethos number]
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Plain Layout
Signed: Seirra Blake
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Plain Layout
Date: 20.5.2022
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Acknowledgements
\end_layout

\begin_layout Chapter*
Abbreviations
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU's Not Unix
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GUI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphical UI
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GZip
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU Zip
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
I
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The author
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ISO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ISO 9660 image
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KVM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kernel-based Virtual Machine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OSS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open Source Software
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PFL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Portage File List
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Package Manager
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Virtual Machine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{headings}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
The smallest of Linux installations can easily have 300 packages; installations
 will typically have 1000s of software packages installed.
 A PM helps simplify the management of installations, as it can check for
 and apply updates, as well as install new software with all the necessary
 dependencies and remove old dependencies
\begin_inset CommandInset citation
LatexCommand citep
key "falkoPackageManagerCore2007"
literal "false"

\end_inset

.
 Ubuntu Kylin 14.04 has 2240 packages
\begin_inset CommandInset citation
LatexCommand citep
key "wangGraphMethodPackage2015"
literal "false"

\end_inset

.
 Missing packages can result in the failure of software compilation, installatio
n or execution
\begin_inset CommandInset citation
LatexCommand citep
key "zhangComprehensiveApproachSoftware2011"
literal "false"

\end_inset

.
 Software typically has large, complex dependency trees
\begin_inset CommandInset citation
LatexCommand citep
key "zhangComprehensiveApproachSoftware2011,ossherAutomatedDependencyResolution2010"
literal "false"

\end_inset

; this means Software development can generally be considered near impossible
 without a PM.
 Furthermore, without PMs, the adoption of OSS can be impacted
\begin_inset CommandInset citation
LatexCommand citep
key "ossherAutomatedDependencyResolution2010"
literal "false"

\end_inset

.
 Although PMs are more common in Linux and BSD operating systems, Microsoft
 windows is also slowly shifting towards a PM-based approach, however the
 focus will remain on Linux.
 Currently on windows most software is graphically installed; in many ways
 each installer is performing the role of a PM which can result in duplicated
 effort, which may partly be the reason for a growing popularity in PMs.
\end_layout

\begin_layout Section
Course specific learning outcomes
\end_layout

\begin_layout Itemize
Independently plan, manage and successfully complete a project of substantial
 size in an area that is relevant to your Degree programme.
\end_layout

\begin_layout Chapter
Research
\end_layout

\begin_layout Standard
dependency resolution, dependency resolution speed issues, be very clear
 about testing criteria, talk about how cache data is stored.
\end_layout

\begin_layout Section
What is a package?
\end_layout

\begin_layout Standard
Packages are typically identified by a unique name, Gentoo Linux extends
 this by identifying packages by category, name, repository and use flags.
 Use flags allow a package to be more finely tuned, common examples are
 flags for features and flags for optimisations.
 A binary package is pre-compiled, whereas a source package still needs
 to be compiled.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

The relationships of packages, such as dependencies, are commonly represented
 by a graph, similar to figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-graph-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Binary packages are the most popular type
\begin_inset CommandInset citation
LatexCommand citep
key "zhangComprehensiveApproachSoftware2011"
literal "false"

\end_inset

, deb and rpm are two such examples which are stored as compressed archives.
 Aside from a set of files to write to the system, packages also commonly
 contain instructions to add users, set up configuration files, set file
 permissions and various other administrative actions
\begin_inset CommandInset citation
LatexCommand citep
key "wangGraphMethodPackage2015"
literal "false"

\end_inset

.
 It is worth noting that there are many more forms of binary package.
 Licences are an important issue with packages, as once a package with a
 restrictive licence is introduced into the system, the entire branch that
 depends on that package will become 'tainted', any packages with more liberal
 licences inheriting the more restrictive licence of the aforementioned
 dependency.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename graph.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A graph of the packages in Ubuntu Kylin 14.04 and their dependency relationships
\begin_inset CommandInset citation
LatexCommand citep
key "wangGraphMethodPackage2015"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:A-graph-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Processing packages
\end_layout

\begin_layout Standard
A PM typically keeps track of the files a package installs, which facilitates
 an easy way to uninstall, as it will just remove the installed files.
 Source packages have the advantage of being more easily customisable and
 easier to create.
 Binary packages are typically faster to install compared to the typical
 time to compile a package, however are not easily altered
\begin_inset CommandInset citation
LatexCommand citep
key "falkoPackageManagerCore2007"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Library linking
\end_layout

\begin_layout Standard
Libraries are integral to larger applications, they allow for code to be
 reused.
 Whilst statically linked libraries are linked on a per application basis,
 dynamically linked libraries are stored as shared objects that may be used
 by multiple applications
\begin_inset CommandInset citation
LatexCommand citep
key "kellMissingLinkExplaining2016"
literal "false"

\end_inset

.
 Many modern packages no longer include libraries
\begin_inset CommandInset citation
LatexCommand citep
key "zhangComprehensiveApproachSoftware2011"
literal "false"

\end_inset

 which is a result of dynamic linking's benefits that include reduced disk
 space and memory usage.
 Dynamically linked libraries take longer to load than statically linked
 libraries, however this is a minimal issue on modern systems.
 So long as all versions use a shared interface, an application built to
 use dynamically linked libraries may theoretically run on any system.
 Dynamic linking can improve security as when a security or bug fix is released
 for a library, it can be applied without changing the applications that
 use it
\begin_inset CommandInset citation
LatexCommand citep
key "deanSecurityStaticTyping1997"
literal "false"

\end_inset

.
 Libraries can be categorised as runtime, build-time and feature dependencies
\begin_inset CommandInset citation
LatexCommand citep
key "zhangComprehensiveApproachSoftware2011"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Input/output performance
\end_layout

\begin_layout Standard
An important part of this project is the language that is used.
 This was discussed with various professionals, with the general conclusion
 being that it will be input/output-heavy, which the initial possible language,
 java, would perform poorly at.
 Possible alternative languages that were identified in discussion were
 C# and go.
 It was difficult to find data on local input/output performance, as most
 comparisons were for network input/output.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

As can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Results-of-a"
plural "false"
caps "false"
noprefix "false"

\end_inset

, java is surprisingly performant at concurrent input/output, however this
 is overshadowed by the performance seen with go.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename io-requests.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Results of a 5000 concurrent requests test
\begin_inset CommandInset citation
LatexCommand citep
key "bradpeabodyServersidePerformanceNode2017"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Results-of-a"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

When looking at figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mean-number-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

, it can be seen that once again go is one of the most performant options
 for input/output, completing requests faster than other, popular choices.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename io-time.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mean number of milliseconds to complete a request
\begin_inset CommandInset citation
LatexCommand citep
key "bradpeabodyServersidePerformanceNode2017"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Mean-number-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

This data so far has not considered popular languages such as C++, python
 and rust.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Input/output-latency-(left"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows that rust and C++ are even more viable than go.
 C++ may be too complex, however rust or go are potentially viable options.
 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename io-combined.webp
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Input/output latency (left axis) and throughput (right axis)
\begin_inset CommandInset citation
LatexCommand citep
key "retunskyBenchmarkingLowlevelRust2023"
literal "false"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Input/output-latency-(left"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Existing implementations
\end_layout

\begin_layout Standard
Whilst it is possible to design completely from scratch, it does not feel
 logical to do so.
 By looking at existing implementations, informed decisions can be made.
 For brevity's sake, only source-based PMs will be examined.
\end_layout

\begin_layout Subsection
Nix
\end_layout

\begin_layout Standard
Nix is the default PM of NixOS.
 Whereas other PMs generally alter the state of the system destructively
 in ways that often cannot be reversed, Nix is designed in such a way that
 each package is contained within a single directory and can be removed
 or added without affecting anything else.
\begin_inset CommandInset citation
LatexCommand citep
key "dolstraNixOSPurelyFunctional2008"
literal "false"

\end_inset


\end_layout

\begin_layout Subsection
Pkgtool
\end_layout

\begin_layout Standard
Pkgtool is the default PM of Slackware.
 Pkgtool is a simple PM composed of a collection of shell scripts that handles
 binary packages in the form of gzip compressed archives.
 Bzip2 would have also been a valid compression format that would have compresse
d the packages further, however the compression and decompression speed
 is typically slower would introduce extra latency to package management
 operations.
 Pkgtool has commands to install, remove, upgrade and create packages
\begin_inset CommandInset citation
LatexCommand citep
key "falkoPackageManagerCore2007"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Possible new features
\end_layout

\begin_layout Standard
There are many possible features that could improve a package manager, below
 are some possible candidates.
\end_layout

\begin_layout Subsection
Caching
\end_layout

\begin_layout Standard
Through the use of caching, common or repetitive actions may theoretically
 be sped up.
\end_layout

\begin_layout Subsection
Dealing with missing dependencies
\end_layout

\begin_layout Standard
It is theorised that by keeping a database of software binaries, missing
 type information could be cross-referenced in order to automatically resolve
 missing dependencies.
 Such a feature could make development simpler, as developers will not need
 to store dependency information in the source files
\begin_inset CommandInset citation
LatexCommand citep
key "ossherAutomatedDependencyResolution2010"
literal "false"

\end_inset

.
 Such a tool Whilst not identical, PFL
\begin_inset CommandInset citation
LatexCommand citep
key "anderslarssonPortageFileList2022"
literal "false"

\end_inset

 is an example of a database that can be cross-referenced to find missing
 binaries
\begin_inset CommandInset citation
LatexCommand citep
key "bendegrootPFL2022"
literal "false"

\end_inset

.
 The ability for anyone to contribute could be considered beneficial, as
 it is more likely to contain the required data.
\end_layout

\begin_layout Chapter
Design
\end_layout

\begin_layout Section
Language
\end_layout

\begin_layout Standard
The language that will be used is rust, this is due to the generally favourable
 input/output performance that it exhibits.
\end_layout

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Section
Testing
\end_layout

\begin_layout Standard
For the testing process a VM was used.
 As the Gentoo live GUI ISO has rustc installed, it should be able to run
 the built software in order to facilitate the Gentoo installation process:
 a perfect test.
 The identical 
\begin_inset Quotes bld
\end_inset

livegui-amd64-20230416T164657Z.iso
\begin_inset Quotes brd
\end_inset

 will be used for each test to keep the results reproducible.
 It was identified that KVM is the most performant VM solution, boxes being
 a suitable GUI through which to easily setup and view the VM.
\end_layout

\begin_layout Chapter
Evaluation
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "library"
options "bibtotoc,agsm"

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Showcase slides
\end_layout

\begin_layout Chapter
Code
\end_layout

\end_body
\end_document
